---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { isAuthenticated } from '../../lib/auth';

// Check if user is already authenticated
if (isAuthenticated(Astro.request)) {
  return Astro.redirect('/admin/settings');
}
---

<BaseLayout title="Admin Login - Troy BBQ">
  <div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <div class="text-center">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Troy BBQ Admin</h1>
        <h2 class="text-xl text-gray-600">Sign in to your account</h2>
      </div>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
      <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
        <form id="loginForm" method="POST" action="/api/admin/auth?action=login" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700">
              Email address
            </label>
            <div class="mt-1">
              <input
                id="email"
                name="email"
                type="email"
                autocomplete="email"
                required
                value="its.zach.w@gmail.com"
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-orange-500 focus:border-orange-500 sm:text-sm"
                placeholder="Enter your email"
              />
            </div>
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700">
              Password
            </label>
            <div class="mt-1">
              <input
                id="password"
                name="password"
                type="password"
                autocomplete="current-password"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-orange-500 focus:border-orange-500 sm:text-sm"
                placeholder="Enter your password"
              />
            </div>
          </div>

          <div id="errorMessage" class="hidden">
            <div class="bg-red-50 border border-red-200 rounded-md p-4">
              <p class="text-sm text-red-600" id="errorText"></p>
            </div>
          </div>

          <div>
            <button
              type="submit"
              id="loginButton"
              class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <span id="buttonText">Sign in</span>
              <span id="buttonSpinner" class="hidden ml-2">
                <svg class="animate-spin h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </span>
            </button>
          </div>
        </form>

        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300" />
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white text-gray-500">Admin Access Only</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('loginForm') as HTMLFormElement;
      const errorMessage = document.getElementById('errorMessage') as HTMLElement;
      const errorText = document.getElementById('errorText') as HTMLElement;
      const loginButton = document.getElementById('loginButton') as HTMLButtonElement;
      const buttonText = document.getElementById('buttonText') as HTMLElement;
      const buttonSpinner = document.getElementById('buttonSpinner') as HTMLElement;

      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Hide any previous error messages
        errorMessage.classList.add('hidden');
        
        // Show loading state
        loginButton.disabled = true;
        buttonText.textContent = 'Signing in...';
        buttonSpinner.classList.remove('hidden');

        try {
          const formData = new FormData(form);
          const response = await fetch('/api/admin/auth?action=login', {
            method: 'POST',
            body: formData
          });

          const result = await response.json();

          if (result.success) {
            // Redirect to admin dashboard
            window.location.href = result.redirectUrl || '/admin/settings';
          } else {
            // Show error message
            errorText.textContent = result.error || 'Login failed. Please try again.';
            errorMessage.classList.remove('hidden');
          }
        } catch (error) {
          console.error('Login error:', error);
          errorText.textContent = 'An unexpected error occurred. Please try again.';
          errorMessage.classList.remove('hidden');
        } finally {
          // Reset button state
          loginButton.disabled = false;
          buttonText.textContent = 'Sign in';
          buttonSpinner.classList.add('hidden');
        }
      });
    });
  </script>
</BaseLayout>